# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Lint CI

on:
  push:
    branches: ["test", "main"]
  pull_request:
    branches: ["test", "main"]

jobs:
  lint:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Install CLI
        uses: dopplerhq/cli-action@v2
      - name: cache
        uses: actions/cache@v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Use Node.js 20.5.0
        uses: actions/setup-node@v3
        with:
          node-version: 20.5.0
          cache: "npm"
      - run: npm ci
      - run: npm run lint
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
