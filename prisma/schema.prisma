generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["debian-openssl-1.1.x", "debian-openssl-3.0.x", "darwin-arm64", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String   @id @default(uuid()) @db.Char(36)
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.Text
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now())
  user              User?    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Careers {
  id                 String            @id @default(uuid()) @db.Char(36)
  status             String            @default("draft") @db.VarChar(255)
  sort               Int?
  user_created       String?           @db.Char(36)
  date_created       DateTime?         @db.Timestamp(0)
  user_updated       String?           @db.Char(36)
  date_updated       DateTime?         @db.Timestamp(0)
  name               String?           @unique(map: "careers_name_unique") @db.VarChar(255)
  description        String?           @db.Text
  salaryMin          Int?
  salaryMax          Int?
  retrainingWeeks    Int?
  detailsTasks       String?           @db.Text
  detailsSkills      String?           @db.Text
  detailsRequirement String?           @db.Text
  detailsFuture      String?           @db.Text
  image              String?           @db.Char(36)
  Careers_Courses    Careers_Courses[]
  Careers_Quizzes    Careers_Quizzes[]

  @@index([user_created], map: "careers_user_created_foreign")
  @@index([user_updated], map: "careers_user_updated_foreign")
  @@index([image], map: "careers_image_foreign")
}

model Careers_Courses {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  Careers_id String?  @db.Char(36)
  Courses_id Int?     @db.UnsignedInt
  careers    Careers? @relation(fields: [Careers_id], references: [id])
  courses    Courses? @relation(fields: [Courses_id], references: [id])

  @@index([Careers_id], map: "careers_courses_careers_id_foreign")
  @@index([Courses_id], map: "careers_courses_courses_id_foreign")
}

model Companies {
  id            Int       @id @default(autoincrement()) @db.UnsignedInt
  status        String    @default("draft") @db.VarChar(255)
  sort          Int?
  user_created  String?   @db.Char(36)
  date_created  DateTime? @db.Timestamp(0)
  user_updated  String?   @db.Char(36)
  date_updated  DateTime? @db.Timestamp(0)
  name          String?   @db.VarChar(255)
  description   String?   @db.Text
  logo          String?   @db.Char(36)
  type          String?   @db.VarChar(255)
  web           String?   @db.VarChar(255)
  email_billing String?   @db.VarChar(255)
  vat           String?   @db.VarChar(255)
  Address       Address[]
  Contact       Contact[]
  Courses       Courses[]

  @@index([logo], map: "companies_logo_foreign")
  @@index([user_created], map: "companies_user_created_foreign")
  @@index([user_updated], map: "companies_user_updated_foreign")
}

model Courses {
  id                 Int                  @id @default(autoincrement()) @db.UnsignedInt
  status             String               @default("draft") @db.VarChar(255)
  sort               Int?
  user_created       String?              @db.Char(36)
  date_created       DateTime?            @db.Timestamp(0)
  user_updated       String?              @db.Char(36)
  date_updated       DateTime?            @db.Timestamp(0)
  name               String?              @db.VarChar(255)
  description        String?              @db.Text
  sponsonrship       Boolean?
  price              Decimal?             @db.Decimal(10, 5)
  location           String?              @db.VarChar(255)
  start_date         DateTime?            @db.Date
  course_type        Json?
  pace               Json?
  image              String?              @db.Char(36)
  company            Int?                 @db.UnsignedInt
  Company            Companies?           @relation(fields: [company], references: [id])
  Careers_Courses    Careers_Courses[]
  Courses_Prototypes Courses_Prototypes[]

  @@index([user_created], map: "courses_user_created_foreign")
  @@index([user_updated], map: "courses_user_updated_foreign")
  @@index([image], map: "courses_image_foreign")
  @@index([company], map: "courses_company_foreign")
}

model EvaluationFormAnswer {
  id                     Int                     @id @default(autoincrement()) @db.UnsignedInt
  status                 String                  @default("draft") @db.VarChar(255)
  sort                   Int?
  user_created           String?                 @db.Char(36)
  date_created           DateTime?               @db.Timestamp(0)
  user_updated           String?                 @db.Char(36)
  date_updated           DateTime?               @db.Timestamp(0)
  value                  String?                 @db.VarChar(255)
  question               Int?                    @db.UnsignedInt
  label                  String?                 @db.VarChar(255)
  letter                 String?                 @db.VarChar(255)
  EvaluationFormQuestion EvaluationFormQuestion? @relation(fields: [question], references: [id])

  @@index([question], map: "evaluationformanswer_question_foreign")
  @@index([user_created], map: "evaluationformanswer_user_created_foreign")
  @@index([user_updated], map: "evaluationformanswer_user_updated_foreign")
}

model EvaluationFormQuestion {
  id                         Int                          @id @default(autoincrement()) @db.UnsignedInt
  status                     String                       @default("draft") @db.VarChar(255)
  sort                       Int?
  user_created               String?                      @db.Char(36)
  date_created               DateTime?                    @db.Timestamp(0)
  user_updated               String?                      @db.Char(36)
  date_updated               DateTime?                    @db.Timestamp(0)
  step                       Int?                         @db.UnsignedInt
  question                   String?                      @db.VarChar(255)
  type                       String?                      @db.VarChar(255)
  range_min                  Int?                         @default(0)
  range_max                  Int?
  tag_limit                  Int?
  tags                       Json?
  EvalutionFormStep          EvaluationFormStep?          @relation(fields: [step], references: [id])
  EvaluationFormAnswer       EvaluationFormAnswer[]
  EvaluationFormUserResponse EvaluationFormUserResponse[]

  @@index([step], map: "evaluationformquestion_step_foreign")
  @@index([user_created], map: "evaluationformquestion_user_created_foreign")
  @@index([user_updated], map: "evaluationformquestion_user_updated_foreign")
}

model EvaluationFormStep {
  id                     Int                      @id @default(autoincrement()) @db.UnsignedInt
  status                 String                   @default("draft") @db.VarChar(255)
  sort                   Int?
  user_created           String?                  @db.Char(36)
  date_created           DateTime?                @db.Timestamp(0)
  user_updated           String?                  @db.Char(36)
  date_updated           DateTime?                @db.Timestamp(0)
  title                  String?                  @unique(map: "evaluationformstep_title_unique") @db.VarChar(255)
  description            String?                  @db.Text
  EvaluationFormQuestion EvaluationFormQuestion[]

  @@index([user_created], map: "evaluationformstep_user_created_foreign")
  @@index([user_updated], map: "evaluationformstep_user_updated_foreign")
}

model EvaluationFormUserResponse {
  id                     Int                     @id @default(autoincrement()) @db.UnsignedInt
  date_created           DateTime?               @db.Timestamp(0)
  date_updated           DateTime?               @db.Timestamp(0)
  question               Int?                    @db.UnsignedInt
  answer                 String?                 @db.VarChar(255)
  user                   String?                 @db.VarChar(255)
  uid                    String?                 @db.VarChar(255)
  User                   User?                   @relation(fields: [user], references: [id])
  EvaluationFormQuestion EvaluationFormQuestion? @relation(fields: [question], references: [id])

  @@index([question], map: "evaluationformuserresponse_question_foreign")
  @@index([user])
}

model FaqItem {
  id           Int       @id @default(autoincrement()) @db.UnsignedInt
  status       String    @default("draft") @db.VarChar(255)
  sort         Int?
  user_created String?   @db.Char(36)
  date_created DateTime? @db.Timestamp(0)
  user_updated String?   @db.Char(36)
  date_updated DateTime? @db.Timestamp(0)
  question     String?   @db.VarChar(255)
  answer       String?   @db.Text

  @@index([user_created], map: "faqitem_user_created_foreign")
  @@index([user_updated], map: "faqitem_user_updated_foreign")
}

model PersonalityTags {
  id                                String                              @id @default(uuid()) @db.Char(36)
  status                            String                              @default("draft") @db.VarChar(255)
  sort                              Int?
  user_created                      String?                             @db.Char(36)
  date_created                      DateTime?                           @db.Timestamp(0)
  name                              String?                             @unique(map: "personalitytags_name_unique") @db.VarChar(255)
  UserPersonality_PersonalityTags   UserPersonality_PersonalityTags[]
  UserPersonality_PersonalityTags_1 UserPersonality_PersonalityTags_1[]
  UserPersonality_PersonalityTags_2 UserPersonality_PersonalityTags_2[]

  @@index([user_created], map: "personalitytags_user_created_foreign")
}

model Profile {
  id                  String           @id @default(uuid()) @db.Char(36)
  status              String           @default("draft") @db.VarChar(255)
  sort                Int?
  user_created        String?          @db.Char(36)
  date_created        DateTime?        @db.Timestamp(0)
  user_updated        String?          @db.Char(36)
  date_updated        DateTime?        @db.Timestamp(0)
  personality         String?          @db.Char(36)
  user                String?          @db.VarChar(255)
  userId              String?
  uid                 String?          @unique(map: "profile_uid_unique") @db.VarChar(255)
  evaluation_response String?          @db.Text
  avatar              String?          @db.Char(36)
  country             String?          @default("DE") @db.VarChar(255)
  state               String?          @db.VarChar(255)
  userPersonality     UserPersonality? @relation(fields: [personality], references: [id])
  User                User?            @relation(fields: [userId], references: [id])

  @@index([personality], map: "profile_personality_foreign")
  @@index([user_created], map: "profile_user_created_foreign")
  @@index([user_updated], map: "profile_user_updated_foreign")
  @@index([userId])
  @@index([avatar], map: "profile_avatar_foreign")
}

model Quizzes {
  id               Int               @id @default(autoincrement()) @db.UnsignedInt
  status           String            @default("draft") @db.VarChar(255)
  sort             Int?
  user_created     String?           @db.Char(36)
  date_created     DateTime?         @db.Timestamp(0)
  user_updated     String?           @db.Char(36)
  date_updated     DateTime?         @db.Timestamp(0)
  description      String?           @db.Text
  image            String?           @db.Char(36)
  name             String?           @db.VarChar(255)
  duration         Int?
  content          String?           @db.Text
  type             String?           @db.VarChar(255)
  file             String?           @db.Char(36)
  file_description String?           @db.VarChar(255)
  file_name        String?           @db.VarChar(255)
  Careers_Quizzes  Careers_Quizzes[]

  @@index([image], map: "quizzes_image_foreign")
  @@index([user_created], map: "quizzes_user_created_foreign")
  @@index([user_updated], map: "quizzes_user_updated_foreign")
  @@index([file], map: "quizzes_file_foreign")
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  user         User?    @relation(fields: [userId], references: [id])

  @@index([userId])
}

model User {
  id                         String                       @id @default(uuid())
  name                       String?
  password                   String?
  email                      String?                      @unique
  emailVerified              DateTime?
  image                      String?
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @default(now())
  profileId                  String?                      @db.Char(36)
  notify_career_updates      Boolean?                     @default(true)
  notify_training_updates    Boolean?                     @default(true)
  evaluationCompleted        Boolean?
  premium                    Boolean?
  Profile                    Profile[]
  Session                    Session[]
  Account                    Account[]
  EvaluationFormUserResponse EvaluationFormUserResponse[]
  Contact                    Contact[]

  @@index([profileId])
}

model UserPersonality {
  id                     String                              @id @default(uuid()) @db.Char(36)
  status                 String                              @default("draft") @db.VarChar(255)
  sort                   Int?
  user_created           String?                             @db.Char(36)
  user_updated           String?                             @db.Char(36)
  date_updated           DateTime?                           @db.Timestamp(0)
  you_at_work            String?                             @db.Text
  strengths_summary      String?                             @db.Text
  communications_skills  String?                             @db.Text
  leadership             String?                             @db.Text
  teamwork               String?                             @db.Text
  name                   String?                             @unique(map: "userpersonality_name_unique") @db.VarChar(255)
  strengths              UserPersonality_PersonalityTags[]
  ideal_work_environment UserPersonality_PersonalityTags_1[]
  weaknesses             UserPersonality_PersonalityTags_2[]
  Profile                Profile[]

  @@index([user_created], map: "userpersonality_user_created_foreign")
  @@index([user_updated], map: "userpersonality_user_updated_foreign")
}

model UserPersonality_PersonalityTags {
  id                 Int              @id @default(autoincrement()) @db.UnsignedInt
  UserPersonality_id String?          @db.Char(36)
  PersonalityTags_id String?          @db.Char(36)
  userPersonalityId  String?          @db.Char(36)
  UserPersonality    UserPersonality? @relation(fields: [userPersonalityId], references: [id])
  tags               PersonalityTags? @relation(fields: [PersonalityTags_id], references: [id])

  @@index([PersonalityTags_id], map: "userpersonality_personalitytags_personalitytags_id_foreign")
  @@index([UserPersonality_id], map: "userpersonality_personalitytags_userpersonality_id_foreign")
  @@index([userPersonalityId])
}

model UserPersonality_PersonalityTags_1 {
  id                 Int              @id @default(autoincrement()) @db.UnsignedInt
  UserPersonality_id String?          @db.Char(36)
  PersonalityTags_id String?          @db.Char(36)
  userPersonalityId  String?          @db.Char(36)
  UserPersonality    UserPersonality? @relation(fields: [userPersonalityId], references: [id])
  tags               PersonalityTags? @relation(fields: [PersonalityTags_id], references: [id])

  @@index([PersonalityTags_id], map: "userpersonality_personalitytags_1_personalitytags_id_foreign")
  @@index([UserPersonality_id], map: "userpersonality_personalitytags_1_userpersonality_id_foreign")
  @@index([userPersonalityId])
}

model UserPersonality_PersonalityTags_2 {
  id                 Int              @id @default(autoincrement()) @db.UnsignedInt
  UserPersonality_id String?          @db.Char(36)
  PersonalityTags_id String?          @db.Char(36)
  userPersonalityId  String?          @db.Char(36)
  UserPersonality    UserPersonality? @relation(fields: [userPersonalityId], references: [id])
  tags               PersonalityTags? @relation(fields: [PersonalityTags_id], references: [id])

  @@index([PersonalityTags_id], map: "userpersonality_personalitytags_2_personalitytags_id_foreign")
  @@index([UserPersonality_id], map: "userpersonality_personalitytags_2_userpersonality_id_foreign")
  @@index([userPersonalityId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model directus_activity {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  action     String   @db.VarChar(45)
  user       String?  @db.Char(36)
  timestamp  DateTime @default(now()) @db.Timestamp(0)
  ip         String?  @db.VarChar(50)
  user_agent String?  @db.VarChar(255)
  collection String   @db.VarChar(64)
  item       String   @db.VarChar(255)
  comment    String?  @db.Text
  origin     String?  @db.VarChar(255)

  @@index([collection], map: "directus_activity_collection_foreign")
}

model directus_collections {
  collection              String  @id @db.VarChar(64)
  icon                    String? @db.VarChar(30)
  note                    String? @db.Text
  display_template        String? @db.VarChar(255)
  hidden                  Boolean @default(false)
  singleton               Boolean @default(false)
  translations            Json?
  archive_field           String? @db.VarChar(64)
  archive_app_filter      Boolean @default(true)
  archive_value           String? @db.VarChar(255)
  unarchive_value         String? @db.VarChar(255)
  sort_field              String? @db.VarChar(64)
  accountability          String? @default("all") @db.VarChar(255)
  color                   String? @db.VarChar(255)
  item_duplication_fields Json?
  sort                    Int?
  group                   String? @db.VarChar(64)
  collapse                String  @default("open") @db.VarChar(255)
  preview_url             String? @db.VarChar(255)
  versioning              Boolean @default(false)

  @@index([group], map: "directus_collections_group_foreign")
}

model directus_dashboards {
  id           String   @id @db.Char(36)
  name         String   @db.VarChar(255)
  icon         String   @default("dashboard") @db.VarChar(30)
  note         String?  @db.Text
  date_created DateTime @default(now()) @db.Timestamp(0)
  user_created String?  @db.Char(36)
  color        String?  @db.VarChar(255)

  @@index([user_created], map: "directus_dashboards_user_created_foreign")
}

model directus_extensions {
  name    String  @id @db.VarChar(255)
  enabled Boolean @default(true)
}

model directus_fields {
  id                 Int      @id @default(autoincrement()) @db.UnsignedInt
  collection         String   @db.VarChar(64)
  field              String   @db.VarChar(64)
  special            String?  @db.VarChar(64)
  interface          String?  @db.VarChar(64)
  options            Json?
  display            String?  @db.VarChar(64)
  display_options    Json?
  readonly           Boolean  @default(false)
  hidden             Boolean  @default(false)
  sort               Int?     @db.UnsignedInt
  width              String?  @default("full") @db.VarChar(30)
  translations       Json?
  note               String?  @db.Text
  conditions         Json?
  required           Boolean? @default(false)
  group              String?  @db.VarChar(64)
  validation         Json?
  validation_message String?  @db.Text

  @@index([collection], map: "directus_fields_collection_foreign")
}

model directus_files {
  id                String   @id @db.Char(36)
  storage           String   @db.VarChar(255)
  filename_disk     String?  @db.VarChar(255)
  filename_download String   @db.VarChar(255)
  title             String?  @db.VarChar(255)
  type              String?  @db.VarChar(255)
  folder            String?  @db.Char(36)
  uploaded_by       String?  @db.Char(36)
  uploaded_on       DateTime @default(now()) @db.Timestamp(0)
  modified_by       String?  @db.Char(36)
  modified_on       DateTime @default(now()) @db.Timestamp(0)
  charset           String?  @db.VarChar(50)
  filesize          BigInt?
  width             Int?     @db.UnsignedInt
  height            Int?     @db.UnsignedInt
  duration          Int?     @db.UnsignedInt
  embed             String?  @db.VarChar(200)
  description       String?  @db.Text
  location          String?  @db.Text
  tags              String?  @db.Text
  metadata          Json?

  @@index([folder], map: "directus_files_folder_foreign")
  @@index([modified_by], map: "directus_files_modified_by_foreign")
  @@index([uploaded_by], map: "directus_files_uploaded_by_foreign")
}

model directus_flows {
  id             String   @id @db.Char(36)
  name           String   @db.VarChar(255)
  icon           String?  @db.VarChar(30)
  color          String?  @db.VarChar(255)
  description    String?  @db.Text
  status         String   @default("active") @db.VarChar(255)
  trigger        String?  @db.VarChar(255)
  accountability String?  @default("all") @db.VarChar(255)
  options        Json?
  operation      String?  @unique(map: "directus_flows_operation_unique") @db.Char(36)
  date_created   DateTime @default(now()) @db.Timestamp(0)
  user_created   String?  @db.Char(36)

  @@index([user_created], map: "directus_flows_user_created_foreign")
}

model directus_folders {
  id     String  @id @db.Char(36)
  name   String  @db.VarChar(255)
  parent String? @db.Char(36)

  @@index([parent], map: "directus_folders_parent_foreign")
}

model directus_migrations {
  version   String   @id @db.VarChar(255)
  name      String   @db.VarChar(255)
  timestamp DateTime @default(now()) @db.Timestamp(0)
}

model directus_notifications {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  timestamp  DateTime? @default(now()) @db.Timestamp(0)
  status     String?   @default("inbox") @db.VarChar(255)
  recipient  String    @db.Char(36)
  sender     String?   @db.Char(36)
  subject    String    @db.VarChar(255)
  message    String?   @db.Text
  collection String?   @db.VarChar(64)
  item       String?   @db.VarChar(255)

  @@index([recipient], map: "directus_notifications_recipient_foreign")
  @@index([sender], map: "directus_notifications_sender_foreign")
}

model directus_operations {
  id           String   @id @db.Char(36)
  name         String?  @db.VarChar(255)
  key          String   @db.VarChar(255)
  type         String   @db.VarChar(255)
  position_x   Int
  position_y   Int
  options      Json?
  resolve      String?  @unique(map: "directus_operations_resolve_unique") @db.Char(36)
  reject       String?  @unique(map: "directus_operations_reject_unique") @db.Char(36)
  flow         String   @db.Char(36)
  date_created DateTime @default(now()) @db.Timestamp(0)
  user_created String?  @db.Char(36)

  @@index([flow], map: "directus_operations_flow_foreign")
  @@index([user_created], map: "directus_operations_user_created_foreign")
}

model directus_panels {
  id           String   @id @db.Char(36)
  dashboard    String   @db.Char(36)
  name         String?  @db.VarChar(255)
  icon         String?  @db.VarChar(30)
  color        String?  @db.VarChar(10)
  show_header  Boolean  @default(false)
  note         String?  @db.Text
  type         String   @db.VarChar(255)
  position_x   Int
  position_y   Int
  width        Int
  height       Int
  options      Json?
  date_created DateTime @default(now()) @db.Timestamp(0)
  user_created String?  @db.Char(36)

  @@index([dashboard], map: "directus_panels_dashboard_foreign")
  @@index([user_created], map: "directus_panels_user_created_foreign")
}

model directus_permissions {
  id          Int     @id @default(autoincrement()) @db.UnsignedInt
  role        String? @db.Char(36)
  collection  String  @db.VarChar(64)
  action      String  @db.VarChar(10)
  permissions Json?
  validation  Json?
  presets     Json?
  fields      String? @db.Text

  @@index([collection], map: "directus_permissions_collection_foreign")
  @@index([role], map: "directus_permissions_role_foreign")
}

model directus_presets {
  id               Int     @id @default(autoincrement()) @db.UnsignedInt
  bookmark         String? @db.VarChar(255)
  user             String? @db.Char(36)
  role             String? @db.Char(36)
  collection       String? @db.VarChar(64)
  search           String? @db.VarChar(100)
  layout           String? @default("tabular") @db.VarChar(100)
  layout_query     Json?
  layout_options   Json?
  refresh_interval Int?
  filter           Json?
  icon             String? @default("bookmark") @db.VarChar(30)
  color            String? @db.VarChar(255)

  @@index([collection], map: "directus_presets_collection_foreign")
  @@index([role], map: "directus_presets_role_foreign")
  @@index([user], map: "directus_presets_user_foreign")
}

model directus_relations {
  id                      Int     @id @default(autoincrement()) @db.UnsignedInt
  many_collection         String  @db.VarChar(64)
  many_field              String  @db.VarChar(64)
  one_collection          String? @db.VarChar(64)
  one_field               String? @db.VarChar(64)
  one_collection_field    String? @db.VarChar(64)
  one_allowed_collections String? @db.Text
  junction_field          String? @db.VarChar(64)
  sort_field              String? @db.VarChar(64)
  one_deselect_action     String  @default("nullify") @db.VarChar(255)

  @@index([many_collection], map: "directus_relations_many_collection_foreign")
  @@index([one_collection], map: "directus_relations_one_collection_foreign")
}

model directus_revisions {
  id         Int     @id @default(autoincrement()) @db.UnsignedInt
  activity   Int     @db.UnsignedInt
  collection String  @db.VarChar(64)
  item       String  @db.VarChar(255)
  data       Json?
  delta      Json?
  parent     Int?    @db.UnsignedInt
  version    String? @db.Char(36)

  @@index([activity], map: "directus_revisions_activity_foreign")
  @@index([collection], map: "directus_revisions_collection_foreign")
  @@index([parent], map: "directus_revisions_parent_foreign")
  @@index([version], map: "directus_revisions_version_foreign")
}

model directus_roles {
  id           String  @id @db.Char(36)
  name         String  @db.VarChar(100)
  icon         String  @default("supervised_user_circle") @db.VarChar(30)
  description  String? @db.Text
  ip_access    String? @db.Text
  enforce_tfa  Boolean @default(false)
  admin_access Boolean @default(false)
  app_access   Boolean @default(true)
}

model directus_sessions {
  token      String   @id @db.VarChar(64)
  user       String?  @db.Char(36)
  expires    DateTime @default(now()) @db.Timestamp(0)
  ip         String?  @db.VarChar(255)
  user_agent String?  @db.VarChar(255)
  share      String?  @db.Char(36)
  origin     String?  @db.VarChar(255)

  @@index([share], map: "directus_sessions_share_foreign")
  @@index([user], map: "directus_sessions_user_foreign")
}

model directus_settings {
  id                      Int     @id @default(autoincrement()) @db.UnsignedInt
  project_name            String  @default("Directus") @db.VarChar(100)
  project_url             String? @db.VarChar(255)
  project_color           String  @default("#6644FF") @db.VarChar(255)
  project_logo            String? @db.Char(36)
  public_foreground       String? @db.Char(36)
  public_background       String? @db.Char(36)
  public_note             String? @db.Text
  auth_login_attempts     Int?    @default(25) @db.UnsignedInt
  auth_password_policy    String? @db.VarChar(100)
  storage_asset_transform String? @default("all") @db.VarChar(7)
  storage_asset_presets   Json?
  custom_css              String? @db.Text
  storage_default_folder  String? @db.Char(36)
  basemaps                Json?
  mapbox_key              String? @db.VarChar(255)
  module_bar              Json?
  project_descriptor      String? @db.VarChar(100)
  default_language        String  @default("en-US") @db.VarChar(255)
  custom_aspect_ratios    Json?
  public_favicon          String? @db.Char(36)
  default_appearance      String  @default("auto") @db.VarChar(255)
  default_theme_light     String? @db.VarChar(255)
  theme_light_overrides   Json?
  default_theme_dark      String? @db.VarChar(255)
  theme_dark_overrides    Json?

  @@index([project_logo], map: "directus_settings_project_logo_foreign")
  @@index([public_background], map: "directus_settings_public_background_foreign")
  @@index([public_favicon], map: "directus_settings_public_favicon_foreign")
  @@index([public_foreground], map: "directus_settings_public_foreground_foreign")
  @@index([storage_default_folder], map: "directus_settings_storage_default_folder_foreign")
}

model directus_shares {
  id           String    @id @db.Char(36)
  name         String?   @db.VarChar(255)
  collection   String    @db.VarChar(64)
  item         String    @db.VarChar(255)
  role         String?   @db.Char(36)
  password     String?   @db.VarChar(255)
  user_created String?   @db.Char(36)
  date_created DateTime  @default(now()) @db.Timestamp(0)
  date_start   DateTime? @db.Timestamp(0)
  date_end     DateTime? @db.Timestamp(0)
  times_used   Int?      @default(0)
  max_uses     Int?

  @@index([collection], map: "directus_shares_collection_foreign")
  @@index([role], map: "directus_shares_role_foreign")
  @@index([user_created], map: "directus_shares_user_created_foreign")
}

model directus_translations {
  id       String @id @db.Char(36)
  language String @db.VarChar(255)
  key      String @db.VarChar(255)
  value    String @db.Text
}

model directus_users {
  id                    String   @id @db.Char(36)
  first_name            String?  @db.VarChar(50)
  last_name             String?  @db.VarChar(50)
  email                 String?  @unique(map: "directus_users_email_unique") @db.VarChar(128)
  password              String?  @db.VarChar(255)
  location              String?  @db.VarChar(255)
  title                 String?  @db.VarChar(50)
  description           String?  @db.Text
  tags                  Json?
  avatar                String?  @db.Char(36)
  language              String?  @db.VarChar(255)
  tfa_secret            String?  @db.VarChar(255)
  status                String   @default("active") @db.VarChar(16)
  role                  String?  @db.Char(36)
  token                 String?  @unique(map: "directus_users_token_unique") @db.VarChar(255)
  last_access           DateTime @default(now()) @db.Timestamp(0)
  last_page             String?  @db.VarChar(255)
  provider              String   @default("default") @db.VarChar(128)
  external_identifier   String?  @unique(map: "directus_users_external_identifier_unique") @db.VarChar(255)
  auth_data             Json?
  email_notifications   Boolean? @default(true)
  appearance            String?  @db.VarChar(255)
  theme_dark            String?  @db.VarChar(255)
  theme_light           String?  @db.VarChar(255)
  theme_light_overrides Json?
  theme_dark_overrides  Json?

  @@index([role], map: "directus_users_role_foreign")
}

model directus_versions {
  id           String   @id @db.Char(36)
  key          String   @db.VarChar(64)
  name         String?  @db.VarChar(255)
  collection   String   @db.VarChar(64)
  item         String   @db.VarChar(255)
  hash         String?  @db.VarChar(255)
  date_created DateTime @default(now()) @db.Timestamp(0)
  date_updated DateTime @default(now()) @db.Timestamp(0)
  user_created String?  @db.Char(36)
  user_updated String?  @db.Char(36)

  @@index([collection], map: "directus_versions_collection_foreign")
  @@index([user_created], map: "directus_versions_user_created_foreign")
  @@index([user_updated], map: "directus_versions_user_updated_foreign")
}

model directus_webhooks {
  id          Int     @id @default(autoincrement()) @db.UnsignedInt
  name        String  @db.VarChar(255)
  method      String  @default("POST") @db.VarChar(10)
  url         String  @db.VarChar(255)
  status      String  @default("active") @db.VarChar(10)
  data        Boolean @default(true)
  actions     String  @db.VarChar(100)
  collections String  @db.VarChar(255)
  headers     Json?
}

model wp_commentmeta {
  meta_id    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  comment_id BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([comment_id], map: "comment_id")
  @@index([meta_key(length: 191)], map: "meta_key")
}

model wp_comments {
  comment_ID           BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  comment_post_ID      BigInt   @default(0) @db.UnsignedBigInt
  comment_author       String   @db.TinyText
  comment_author_email String   @default("") @db.VarChar(100)
  comment_author_url   String   @default("") @db.VarChar(200)
  comment_author_IP    String   @default("") @db.VarChar(100)
  comment_date         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  comment_date_gmt     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  comment_content      String   @db.Text
  comment_karma        Int      @default(0)
  comment_approved     String   @default("1") @db.VarChar(20)
  comment_agent        String   @default("") @db.VarChar(255)
  comment_type         String   @default("comment") @db.VarChar(20)
  comment_parent       BigInt   @default(0) @db.UnsignedBigInt
  user_id              BigInt   @default(0) @db.UnsignedBigInt

  @@index([comment_approved, comment_date_gmt], map: "comment_approved_date_gmt")
  @@index([comment_author_email(length: 10)], map: "comment_author_email")
  @@index([comment_date_gmt], map: "comment_date_gmt")
  @@index([comment_parent], map: "comment_parent")
  @@index([comment_post_ID], map: "comment_post_ID")
}

model wp_links {
  link_id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  link_url         String   @default("") @db.VarChar(255)
  link_name        String   @default("") @db.VarChar(255)
  link_image       String   @default("") @db.VarChar(255)
  link_target      String   @default("") @db.VarChar(25)
  link_description String   @default("") @db.VarChar(255)
  link_visible     String   @default("Y") @db.VarChar(20)
  link_owner       BigInt   @default(1) @db.UnsignedBigInt
  link_rating      Int      @default(0)
  link_updated     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  link_rel         String   @default("") @db.VarChar(255)
  link_notes       String   @db.MediumText
  link_rss         String   @default("") @db.VarChar(255)

  @@index([link_visible], map: "link_visible")
}

model wp_options {
  option_id    BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  option_name  String @unique(map: "option_name") @default("")
  option_value String @db.LongText
  autoload     String @default("yes") @db.VarChar(20)

  @@index([autoload], map: "autoload")
}

model wp_postmeta {
  meta_id    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  post_id    BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([meta_key(length: 191)], map: "meta_key")
  @@index([post_id], map: "post_id")
}

model wp_posts {
  ID                    BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  post_author           BigInt   @default(0) @db.UnsignedBigInt
  post_date             DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_date_gmt         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_content          String   @db.LongText
  post_title            String   @db.Text
  post_excerpt          String   @db.Text
  post_status           String   @default("publish") @db.VarChar(20)
  comment_status        String   @default("open") @db.VarChar(20)
  ping_status           String   @default("open") @db.VarChar(20)
  post_password         String   @default("") @db.VarChar(255)
  post_name             String   @default("") @db.VarChar(200)
  to_ping               String   @db.Text
  pinged                String   @db.Text
  post_modified         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_modified_gmt     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  post_content_filtered String   @db.LongText
  post_parent           BigInt   @default(0) @db.UnsignedBigInt
  guid                  String   @default("") @db.VarChar(255)
  menu_order            Int      @default(0)
  post_type             String   @default("post") @db.VarChar(20)
  post_mime_type        String   @default("") @db.VarChar(100)
  comment_count         BigInt   @default(0)

  @@index([post_author], map: "post_author")
  @@index([post_name(length: 191)], map: "post_name")
  @@index([post_parent], map: "post_parent")
  @@index([post_type, post_status, post_date, ID], map: "type_status_date")
}

model wp_term_relationships {
  object_id        BigInt @default(0) @db.UnsignedBigInt
  term_taxonomy_id BigInt @default(0) @db.UnsignedBigInt
  term_order       Int    @default(0)

  @@id([object_id, term_taxonomy_id])
  @@index([term_taxonomy_id], map: "term_taxonomy_id")
}

model wp_term_taxonomy {
  term_taxonomy_id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  term_id          BigInt @default(0) @db.UnsignedBigInt
  taxonomy         String @default("") @db.VarChar(32)
  description      String @db.LongText
  parent           BigInt @default(0) @db.UnsignedBigInt
  count            BigInt @default(0)

  @@unique([term_id, taxonomy], map: "term_id_taxonomy")
  @@index([taxonomy], map: "taxonomy")
}

model wp_termmeta {
  meta_id    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  term_id    BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([meta_key(length: 191)], map: "meta_key")
  @@index([term_id], map: "term_id")
}

model wp_terms {
  term_id    BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  name       String @default("") @db.VarChar(200)
  slug       String @default("") @db.VarChar(200)
  term_group BigInt @default(0)

  @@index([name(length: 191)], map: "name")
  @@index([slug(length: 191)], map: "slug")
}

model wp_usermeta {
  umeta_id   BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  user_id    BigInt  @default(0) @db.UnsignedBigInt
  meta_key   String? @db.VarChar(255)
  meta_value String? @db.LongText

  @@index([meta_key(length: 191)], map: "meta_key")
  @@index([user_id], map: "user_id")
}

model wp_users {
  ID                  BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  user_login          String   @default("") @db.VarChar(60)
  user_pass           String   @default("") @db.VarChar(255)
  user_nicename       String   @default("") @db.VarChar(50)
  user_email          String   @default("") @db.VarChar(100)
  user_url            String   @default("") @db.VarChar(100)
  user_registered     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  user_activation_key String   @default("") @db.VarChar(255)
  user_status         Int      @default(0)
  display_name        String   @default("") @db.VarChar(250)

  @@index([user_email], map: "user_email")
  @@index([user_login], map: "user_login_key")
  @@index([user_nicename], map: "user_nicename")
}

model Address {
  id           Int        @id @default(autoincrement()) @db.UnsignedInt
  status       String     @default("draft") @db.VarChar(255)
  sort         Int?
  user_created String?    @db.Char(36)
  date_created DateTime?  @db.Timestamp(0)
  user_updated String?    @db.Char(36)
  date_updated DateTime?  @db.Timestamp(0)
  street       String?    @db.VarChar(255)
  zip          String?    @db.VarChar(255)
  country      String?    @default("DE") @db.VarChar(255)
  company_id   Int?       @db.UnsignedInt
  city         String?    @db.VarChar(255)
  Company      Companies? @relation(fields: [company_id], references: [id])

  @@index([company_id], map: "address_company_id_foreign")
  @@index([user_created], map: "address_user_created_foreign")
  @@index([user_updated], map: "address_user_updated_foreign")
}

model Contact {
  id                     Int        @id @default(autoincrement()) @db.UnsignedInt
  status                 String     @default("draft") @db.VarChar(255)
  sort                   Int?
  user_created           String?    @db.Char(36)
  date_created           DateTime?  @db.Timestamp(0)
  user_updated           String?    @db.Char(36)
  date_updated           DateTime?  @db.Timestamp(0)
  first_name             String?    @db.VarChar(255)
  last_name              String?    @db.VarChar(255)
  email                  String?    @db.VarChar(255)
  phone                  String?    @db.VarChar(255)
  company_id             Int?       @db.UnsignedInt
  notify_lead_updates    Boolean?   @default(true)
  notify_view_updates    Boolean?   @default(true)
  notify_billing_updates Boolean?   @default(true)
  userId                 String?    @db.VarChar(255)
  avatar                 String?    @db.Char(36)
  Company                Companies? @relation(fields: [company_id], references: [id])
  User                   User?      @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([company_id], map: "contact_company_id_foreign")
  @@index([user_created], map: "contact_user_created_foreign")
  @@index([user_updated], map: "contact_user_updated_foreign")
  @@index([avatar], map: "contact_avatar_foreign")
}

model Prototypes {
  id                 Int                  @id @default(autoincrement()) @db.UnsignedInt
  name               String?              @db.VarChar(255)
  description        String?              @db.Text
  completed          Boolean?             @default(false)
  image              String?              @db.Char(36)
  file               String?              @db.Char(36)
  Courses_Prototypes Courses_Prototypes[]

  @@index([image], map: "prototypes_image_foreign")
  @@index([file], map: "prototypes_file_foreign")
}

model Careers_Quizzes {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  Careers_id String?  @db.Char(36)
  Quizzes_id Int?     @db.UnsignedInt
  Careers    Careers? @relation(fields: [Careers_id], references: [id])
  Quizzes    Quizzes? @relation(fields: [Quizzes_id], references: [id])

  @@index([Careers_id], map: "careers_quizzes_careers_id_foreign")
  @@index([Quizzes_id], map: "careers_quizzes_quizzes_id_foreign")
}

model Courses_Prototypes {
  id            Int         @id @default(autoincrement()) @db.UnsignedInt
  Courses_id    Int?        @db.UnsignedInt
  Prototypes_id Int?        @db.UnsignedInt
  coursesId     Int?        @db.UnsignedInt
  Courses       Courses?    @relation(fields: [Courses_id], references: [id])
  Prototypes    Prototypes? @relation(fields: [Prototypes_id], references: [id])

  @@index([Courses_id], map: "courses_prototypes_courses_id_foreign")
  @@index([Prototypes_id], map: "courses_prototypes_prototypes_id_foreign")
}

model Careers_Prototypes {
  id            Int     @id @default(autoincrement()) @db.UnsignedInt
  Careers_id    String? @db.Char(36)
  Prototypes_id Int?    @db.UnsignedInt

  @@index([Careers_id], map: "careers_prototypes_careers_id_foreign")
  @@index([Prototypes_id], map: "careers_prototypes_prototypes_id_foreign")
}
